///////////////////////////////////////////////////////////////////////////////
// CPO file generated at 2021.02.05-21:53:48 for model: cpModel
// Source file: C:/Users/George/Documents/itc2021/python/itc2021/cpModel.py
///////////////////////////////////////////////////////////////////////////////

//--- Constants ---

//--- Variables ---
#line 26 "C:/Users/George/Documents/itc2021/python/itc2021/cpModel.py"
"x(0,1)" = intVar(0..33);
"x(0,2)" = intVar(0..33);
"x(0,3)" = intVar(0..33);
"x(0,4)" = intVar(0..33);
"x(0,5)" = intVar(0..33);
"x(0,6)" = intVar(0..33);
"x(0,7)" = intVar(0..33);
"x(0,8)" = intVar(0..33);
"x(0,9)" = intVar(0..33);
"x(0,10)" = intVar(0..33);
"x(0,11)" = intVar(0..33);
"x(0,12)" = intVar(0..33);
"x(0,13)" = intVar(0..33);
"x(0,14)" = intVar(0..33);
"x(0,15)" = intVar(0..33);
"x(0,16)" = intVar(0..33);
"x(0,17)" = intVar(0..33);
"x(1,0)" = intVar(0..33);
"x(2,0)" = intVar(0..33);
"x(3,0)" = intVar(0..33);
"x(4,0)" = intVar(0..33);
"x(5,0)" = intVar(0..33);
"x(6,0)" = intVar(0..33);
"x(7,0)" = intVar(0..33);
"x(8,0)" = intVar(0..33);
"x(9,0)" = intVar(0..33);
"x(10,0)" = intVar(0..33);
"x(11,0)" = intVar(0..33);
"x(12,0)" = intVar(0..33);
"x(13,0)" = intVar(0..33);
"x(14,0)" = intVar(0..33);
"x(15,0)" = intVar(0..33);
"x(16,0)" = intVar(0..33);
"x(17,0)" = intVar(0..33);
"x(1,2)" = intVar(0..33);
"x(1,3)" = intVar(0..33);
"x(1,4)" = intVar(0..33);
"x(1,5)" = intVar(0..33);
"x(1,6)" = intVar(0..33);
"x(1,7)" = intVar(0..33);
"x(1,8)" = intVar(0..33);
"x(1,9)" = intVar(0..33);
"x(1,10)" = intVar(0..33);
"x(1,11)" = intVar(0..33);
"x(1,12)" = intVar(0..33);
"x(1,13)" = intVar(0..33);
"x(1,14)" = intVar(0..33);
"x(1,15)" = intVar(0..33);
"x(1,16)" = intVar(0..33);
"x(1,17)" = intVar(0..33);
"x(2,1)" = intVar(0..33);
"x(3,1)" = intVar(0..33);
"x(4,1)" = intVar(0..33);
"x(5,1)" = intVar(0..33);
"x(6,1)" = intVar(0..33);
"x(7,1)" = intVar(0..33);
"x(8,1)" = intVar(0..33);
"x(9,1)" = intVar(0..33);
"x(10,1)" = intVar(0..33);
"x(11,1)" = intVar(0..33);
"x(12,1)" = intVar(0..33);
"x(13,1)" = intVar(0..33);
"x(14,1)" = intVar(0..33);
"x(15,1)" = intVar(0..33);
"x(16,1)" = intVar(0..33);
"x(17,1)" = intVar(0..33);
"x(2,3)" = intVar(0..33);
"x(2,4)" = intVar(0..33);
"x(2,5)" = intVar(0..33);
"x(2,6)" = intVar(0..33);
"x(2,7)" = intVar(0..33);
"x(2,8)" = intVar(0..33);
"x(2,9)" = intVar(0..33);
"x(2,10)" = intVar(0..33);
"x(2,11)" = intVar(0..33);
"x(2,12)" = intVar(0..33);
"x(2,13)" = intVar(0..33);
"x(2,14)" = intVar(0..33);
"x(2,15)" = intVar(0..33);
"x(2,16)" = intVar(0..33);
"x(2,17)" = intVar(0..33);
"x(3,2)" = intVar(0..33);
"x(4,2)" = intVar(0..33);
"x(5,2)" = intVar(0..33);
"x(6,2)" = intVar(0..33);
"x(7,2)" = intVar(0..33);
"x(8,2)" = intVar(0..33);
"x(9,2)" = intVar(0..33);
"x(10,2)" = intVar(0..33);
"x(11,2)" = intVar(0..33);
"x(12,2)" = intVar(0..33);
"x(13,2)" = intVar(0..33);
"x(14,2)" = intVar(0..33);
"x(15,2)" = intVar(0..33);
"x(16,2)" = intVar(0..33);
"x(17,2)" = intVar(0..33);
"x(3,4)" = intVar(0..33);
"x(3,5)" = intVar(0..33);
"x(3,6)" = intVar(0..33);
"x(3,7)" = intVar(0..33);
"x(3,8)" = intVar(0..33);
"x(3,9)" = intVar(0..33);
"x(3,10)" = intVar(0..33);
"x(3,11)" = intVar(0..33);
"x(3,12)" = intVar(0..33);
"x(3,13)" = intVar(0..33);
"x(3,14)" = intVar(0..33);
"x(3,15)" = intVar(0..33);
"x(3,16)" = intVar(0..33);
"x(3,17)" = intVar(0..33);
"x(4,3)" = intVar(0..33);
"x(5,3)" = intVar(0..33);
"x(6,3)" = intVar(0..33);
"x(7,3)" = intVar(0..33);
"x(8,3)" = intVar(0..33);
"x(9,3)" = intVar(0..33);
"x(10,3)" = intVar(0..33);
"x(11,3)" = intVar(0..33);
"x(12,3)" = intVar(0..33);
"x(13,3)" = intVar(0..33);
"x(14,3)" = intVar(0..33);
"x(15,3)" = intVar(0..33);
"x(16,3)" = intVar(0..33);
"x(17,3)" = intVar(0..33);
"x(4,5)" = intVar(0..33);
"x(4,6)" = intVar(0..33);
"x(4,7)" = intVar(0..33);
"x(4,8)" = intVar(0..33);
"x(4,9)" = intVar(0..33);
"x(4,10)" = intVar(0..33);
"x(4,11)" = intVar(0..33);
"x(4,12)" = intVar(0..33);
"x(4,13)" = intVar(0..33);
"x(4,14)" = intVar(0..33);
"x(4,15)" = intVar(0..33);
"x(4,16)" = intVar(0..33);
"x(4,17)" = intVar(0..33);
"x(5,4)" = intVar(0..33);
"x(6,4)" = intVar(0..33);
"x(7,4)" = intVar(0..33);
"x(8,4)" = intVar(0..33);
"x(9,4)" = intVar(0..33);
"x(10,4)" = intVar(0..33);
"x(11,4)" = intVar(0..33);
"x(12,4)" = intVar(0..33);
"x(13,4)" = intVar(0..33);
"x(14,4)" = intVar(0..33);
"x(15,4)" = intVar(0..33);
"x(16,4)" = intVar(0..33);
"x(17,4)" = intVar(0..33);
"x(5,6)" = intVar(0..33);
"x(5,7)" = intVar(0..33);
"x(5,8)" = intVar(0..33);
"x(5,9)" = intVar(0..33);
"x(5,10)" = intVar(0..33);
"x(5,11)" = intVar(0..33);
"x(5,12)" = intVar(0..33);
"x(5,13)" = intVar(0..33);
"x(5,14)" = intVar(0..33);
"x(5,15)" = intVar(0..33);
"x(5,16)" = intVar(0..33);
"x(5,17)" = intVar(0..33);
"x(6,5)" = intVar(0..33);
"x(7,5)" = intVar(0..33);
"x(8,5)" = intVar(0..33);
"x(9,5)" = intVar(0..33);
"x(10,5)" = intVar(0..33);
"x(11,5)" = intVar(0..33);
"x(12,5)" = intVar(0..33);
"x(13,5)" = intVar(0..33);
"x(14,5)" = intVar(0..33);
"x(15,5)" = intVar(0..33);
"x(16,5)" = intVar(0..33);
"x(17,5)" = intVar(0..33);
"x(6,7)" = intVar(0..33);
"x(6,8)" = intVar(0..33);
"x(6,9)" = intVar(0..33);
"x(6,10)" = intVar(0..33);
"x(6,11)" = intVar(0..33);
"x(6,12)" = intVar(0..33);
"x(6,13)" = intVar(0..33);
"x(6,14)" = intVar(0..33);
"x(6,15)" = intVar(0..33);
"x(6,16)" = intVar(0..33);
"x(6,17)" = intVar(0..33);
"x(7,6)" = intVar(0..33);
"x(8,6)" = intVar(0..33);
"x(9,6)" = intVar(0..33);
"x(10,6)" = intVar(0..33);
"x(11,6)" = intVar(0..33);
"x(12,6)" = intVar(0..33);
"x(13,6)" = intVar(0..33);
"x(14,6)" = intVar(0..33);
"x(15,6)" = intVar(0..33);
"x(16,6)" = intVar(0..33);
"x(17,6)" = intVar(0..33);
"x(7,8)" = intVar(0..33);
"x(7,9)" = intVar(0..33);
"x(7,10)" = intVar(0..33);
"x(7,11)" = intVar(0..33);
"x(7,12)" = intVar(0..33);
"x(7,13)" = intVar(0..33);
"x(7,14)" = intVar(0..33);
"x(7,15)" = intVar(0..33);
"x(7,16)" = intVar(0..33);
"x(7,17)" = intVar(0..33);
"x(8,7)" = intVar(0..33);
"x(9,7)" = intVar(0..33);
"x(10,7)" = intVar(0..33);
"x(11,7)" = intVar(0..33);
"x(12,7)" = intVar(0..33);
"x(13,7)" = intVar(0..33);
"x(14,7)" = intVar(0..33);
"x(15,7)" = intVar(0..33);
"x(16,7)" = intVar(0..33);
"x(17,7)" = intVar(0..33);
"x(8,9)" = intVar(0..33);
"x(8,10)" = intVar(0..33);
"x(8,11)" = intVar(0..33);
"x(8,12)" = intVar(0..33);
"x(8,13)" = intVar(0..33);
"x(8,14)" = intVar(0..33);
"x(8,15)" = intVar(0..33);
"x(8,16)" = intVar(0..33);
"x(8,17)" = intVar(0..33);
"x(9,8)" = intVar(0..33);
"x(10,8)" = intVar(0..33);
"x(11,8)" = intVar(0..33);
"x(12,8)" = intVar(0..33);
"x(13,8)" = intVar(0..33);
"x(14,8)" = intVar(0..33);
"x(15,8)" = intVar(0..33);
"x(16,8)" = intVar(0..33);
"x(17,8)" = intVar(0..33);
"x(9,10)" = intVar(0..33);
"x(9,11)" = intVar(0..33);
"x(9,12)" = intVar(0..33);
"x(9,13)" = intVar(0..33);
"x(9,14)" = intVar(0..33);
"x(9,15)" = intVar(0..33);
"x(9,16)" = intVar(0..33);
"x(9,17)" = intVar(0..33);
"x(10,9)" = intVar(0..33);
"x(11,9)" = intVar(0..33);
"x(12,9)" = intVar(0..33);
"x(13,9)" = intVar(0..33);
"x(14,9)" = intVar(0..33);
"x(15,9)" = intVar(0..33);
"x(16,9)" = intVar(0..33);
"x(17,9)" = intVar(0..33);
"x(10,11)" = intVar(0..33);
"x(10,12)" = intVar(0..33);
"x(10,13)" = intVar(0..33);
"x(10,14)" = intVar(0..33);
"x(10,15)" = intVar(0..33);
"x(10,16)" = intVar(0..33);
"x(10,17)" = intVar(0..33);
"x(11,10)" = intVar(0..33);
"x(12,10)" = intVar(0..33);
"x(13,10)" = intVar(0..33);
"x(14,10)" = intVar(0..33);
"x(15,10)" = intVar(0..33);
"x(16,10)" = intVar(0..33);
"x(17,10)" = intVar(0..33);
"x(11,12)" = intVar(0..33);
"x(11,13)" = intVar(0..33);
"x(11,14)" = intVar(0..33);
"x(11,15)" = intVar(0..33);
"x(11,16)" = intVar(0..33);
"x(11,17)" = intVar(0..33);
"x(12,11)" = intVar(0..33);
"x(13,11)" = intVar(0..33);
"x(14,11)" = intVar(0..33);
"x(15,11)" = intVar(0..33);
"x(16,11)" = intVar(0..33);
"x(17,11)" = intVar(0..33);
"x(12,13)" = intVar(0..33);
"x(12,14)" = intVar(0..33);
"x(12,15)" = intVar(0..33);
"x(12,16)" = intVar(0..33);
"x(12,17)" = intVar(0..33);
"x(13,12)" = intVar(0..33);
"x(14,12)" = intVar(0..33);
"x(15,12)" = intVar(0..33);
"x(16,12)" = intVar(0..33);
"x(17,12)" = intVar(0..33);
"x(13,14)" = intVar(0..33);
"x(13,15)" = intVar(0..33);
"x(13,16)" = intVar(0..33);
"x(13,17)" = intVar(0..33);
"x(14,13)" = intVar(0..33);
"x(15,13)" = intVar(0..33);
"x(16,13)" = intVar(0..33);
"x(17,13)" = intVar(0..33);
"x(14,15)" = intVar(0..33);
"x(14,16)" = intVar(0..33);
"x(14,17)" = intVar(0..33);
"x(15,14)" = intVar(0..33);
"x(16,14)" = intVar(0..33);
"x(17,14)" = intVar(0..33);
"x(15,16)" = intVar(0..33);
"x(15,17)" = intVar(0..33);
"x(16,15)" = intVar(0..33);
"x(17,15)" = intVar(0..33);
"x(16,17)" = intVar(0..33);
"x(17,16)" = intVar(0..33);

//--- Expressions ---
#line 26 "C:/Users/George/Documents/itc2021/python/itc2021/cpModel.py"
alldiff(["x(0,1)", "x(0,2)", "x(0,3)", "x(0,4)", "x(0,5)", "x(0,6)", "x(0,7)", "x(0,8)", "x(0,9)", "x(0,10)", "x(0,11)", "x(0,12)", "x(0,13)", "x(0,14)", "x(0,15)", "x(0,16)", "x(0,17)", "x(1,0)", "x(2,0)", "x(3,0)", "x(4,0)", "x(5,0)", "x(6,0)", "x(7,0)", "x(8,0)", "x(9,0)", "x(10,0)", "x(11,0)", "x(12,0)", "x(13,0)", "x(14,0)", "x(15,0)", "x(16,0)", "x(17,0)"]);
alldiff(["x(1,0)", "x(1,2)", "x(1,3)", "x(1,4)", "x(1,5)", "x(1,6)", "x(1,7)", "x(1,8)", "x(1,9)", "x(1,10)", "x(1,11)", "x(1,12)", "x(1,13)", "x(1,14)", "x(1,15)", "x(1,16)", "x(1,17)", "x(0,1)", "x(2,1)", "x(3,1)", "x(4,1)", "x(5,1)", "x(6,1)", "x(7,1)", "x(8,1)", "x(9,1)", "x(10,1)", "x(11,1)", "x(12,1)", "x(13,1)", "x(14,1)", "x(15,1)", "x(16,1)", "x(17,1)"]);
alldiff(["x(2,0)", "x(2,1)", "x(2,3)", "x(2,4)", "x(2,5)", "x(2,6)", "x(2,7)", "x(2,8)", "x(2,9)", "x(2,10)", "x(2,11)", "x(2,12)", "x(2,13)", "x(2,14)", "x(2,15)", "x(2,16)", "x(2,17)", "x(0,2)", "x(1,2)", "x(3,2)", "x(4,2)", "x(5,2)", "x(6,2)", "x(7,2)", "x(8,2)", "x(9,2)", "x(10,2)", "x(11,2)", "x(12,2)", "x(13,2)", "x(14,2)", "x(15,2)", "x(16,2)", "x(17,2)"]);
alldiff(["x(3,0)", "x(3,1)", "x(3,2)", "x(3,4)", "x(3,5)", "x(3,6)", "x(3,7)", "x(3,8)", "x(3,9)", "x(3,10)", "x(3,11)", "x(3,12)", "x(3,13)", "x(3,14)", "x(3,15)", "x(3,16)", "x(3,17)", "x(0,3)", "x(1,3)", "x(2,3)", "x(4,3)", "x(5,3)", "x(6,3)", "x(7,3)", "x(8,3)", "x(9,3)", "x(10,3)", "x(11,3)", "x(12,3)", "x(13,3)", "x(14,3)", "x(15,3)", "x(16,3)", "x(17,3)"]);
alldiff(["x(4,0)", "x(4,1)", "x(4,2)", "x(4,3)", "x(4,5)", "x(4,6)", "x(4,7)", "x(4,8)", "x(4,9)", "x(4,10)", "x(4,11)", "x(4,12)", "x(4,13)", "x(4,14)", "x(4,15)", "x(4,16)", "x(4,17)", "x(0,4)", "x(1,4)", "x(2,4)", "x(3,4)", "x(5,4)", "x(6,4)", "x(7,4)", "x(8,4)", "x(9,4)", "x(10,4)", "x(11,4)", "x(12,4)", "x(13,4)", "x(14,4)", "x(15,4)", "x(16,4)", "x(17,4)"]);
alldiff(["x(5,0)", "x(5,1)", "x(5,2)", "x(5,3)", "x(5,4)", "x(5,6)", "x(5,7)", "x(5,8)", "x(5,9)", "x(5,10)", "x(5,11)", "x(5,12)", "x(5,13)", "x(5,14)", "x(5,15)", "x(5,16)", "x(5,17)", "x(0,5)", "x(1,5)", "x(2,5)", "x(3,5)", "x(4,5)", "x(6,5)", "x(7,5)", "x(8,5)", "x(9,5)", "x(10,5)", "x(11,5)", "x(12,5)", "x(13,5)", "x(14,5)", "x(15,5)", "x(16,5)", "x(17,5)"]);
alldiff(["x(6,0)", "x(6,1)", "x(6,2)", "x(6,3)", "x(6,4)", "x(6,5)", "x(6,7)", "x(6,8)", "x(6,9)", "x(6,10)", "x(6,11)", "x(6,12)", "x(6,13)", "x(6,14)", "x(6,15)", "x(6,16)", "x(6,17)", "x(0,6)", "x(1,6)", "x(2,6)", "x(3,6)", "x(4,6)", "x(5,6)", "x(7,6)", "x(8,6)", "x(9,6)", "x(10,6)", "x(11,6)", "x(12,6)", "x(13,6)", "x(14,6)", "x(15,6)", "x(16,6)", "x(17,6)"]);
alldiff(["x(7,0)", "x(7,1)", "x(7,2)", "x(7,3)", "x(7,4)", "x(7,5)", "x(7,6)", "x(7,8)", "x(7,9)", "x(7,10)", "x(7,11)", "x(7,12)", "x(7,13)", "x(7,14)", "x(7,15)", "x(7,16)", "x(7,17)", "x(0,7)", "x(1,7)", "x(2,7)", "x(3,7)", "x(4,7)", "x(5,7)", "x(6,7)", "x(8,7)", "x(9,7)", "x(10,7)", "x(11,7)", "x(12,7)", "x(13,7)", "x(14,7)", "x(15,7)", "x(16,7)", "x(17,7)"]);
alldiff(["x(8,0)", "x(8,1)", "x(8,2)", "x(8,3)", "x(8,4)", "x(8,5)", "x(8,6)", "x(8,7)", "x(8,9)", "x(8,10)", "x(8,11)", "x(8,12)", "x(8,13)", "x(8,14)", "x(8,15)", "x(8,16)", "x(8,17)", "x(0,8)", "x(1,8)", "x(2,8)", "x(3,8)", "x(4,8)", "x(5,8)", "x(6,8)", "x(7,8)", "x(9,8)", "x(10,8)", "x(11,8)", "x(12,8)", "x(13,8)", "x(14,8)", "x(15,8)", "x(16,8)", "x(17,8)"]);
alldiff(["x(9,0)", "x(9,1)", "x(9,2)", "x(9,3)", "x(9,4)", "x(9,5)", "x(9,6)", "x(9,7)", "x(9,8)", "x(9,10)", "x(9,11)", "x(9,12)", "x(9,13)", "x(9,14)", "x(9,15)", "x(9,16)", "x(9,17)", "x(0,9)", "x(1,9)", "x(2,9)", "x(3,9)", "x(4,9)", "x(5,9)", "x(6,9)", "x(7,9)", "x(8,9)", "x(10,9)", "x(11,9)", "x(12,9)", "x(13,9)", "x(14,9)", "x(15,9)", "x(16,9)", "x(17,9)"]);
alldiff(["x(10,0)", "x(10,1)", "x(10,2)", "x(10,3)", "x(10,4)", "x(10,5)", "x(10,6)", "x(10,7)", "x(10,8)", "x(10,9)", "x(10,11)", "x(10,12)", "x(10,13)", "x(10,14)", "x(10,15)", "x(10,16)", "x(10,17)", "x(0,10)", "x(1,10)", "x(2,10)", "x(3,10)", "x(4,10)", "x(5,10)", "x(6,10)", "x(7,10)", "x(8,10)", "x(9,10)", "x(11,10)", "x(12,10)", "x(13,10)", "x(14,10)", "x(15,10)", "x(16,10)", "x(17,10)"]);
alldiff(["x(11,0)", "x(11,1)", "x(11,2)", "x(11,3)", "x(11,4)", "x(11,5)", "x(11,6)", "x(11,7)", "x(11,8)", "x(11,9)", "x(11,10)", "x(11,12)", "x(11,13)", "x(11,14)", "x(11,15)", "x(11,16)", "x(11,17)", "x(0,11)", "x(1,11)", "x(2,11)", "x(3,11)", "x(4,11)", "x(5,11)", "x(6,11)", "x(7,11)", "x(8,11)", "x(9,11)", "x(10,11)", "x(12,11)", "x(13,11)", "x(14,11)", "x(15,11)", "x(16,11)", "x(17,11)"]);
alldiff(["x(12,0)", "x(12,1)", "x(12,2)", "x(12,3)", "x(12,4)", "x(12,5)", "x(12,6)", "x(12,7)", "x(12,8)", "x(12,9)", "x(12,10)", "x(12,11)", "x(12,13)", "x(12,14)", "x(12,15)", "x(12,16)", "x(12,17)", "x(0,12)", "x(1,12)", "x(2,12)", "x(3,12)", "x(4,12)", "x(5,12)", "x(6,12)", "x(7,12)", "x(8,12)", "x(9,12)", "x(10,12)", "x(11,12)", "x(13,12)", "x(14,12)", "x(15,12)", "x(16,12)", "x(17,12)"]);
alldiff(["x(13,0)", "x(13,1)", "x(13,2)", "x(13,3)", "x(13,4)", "x(13,5)", "x(13,6)", "x(13,7)", "x(13,8)", "x(13,9)", "x(13,10)", "x(13,11)", "x(13,12)", "x(13,14)", "x(13,15)", "x(13,16)", "x(13,17)", "x(0,13)", "x(1,13)", "x(2,13)", "x(3,13)", "x(4,13)", "x(5,13)", "x(6,13)", "x(7,13)", "x(8,13)", "x(9,13)", "x(10,13)", "x(11,13)", "x(12,13)", "x(14,13)", "x(15,13)", "x(16,13)", "x(17,13)"]);
alldiff(["x(14,0)", "x(14,1)", "x(14,2)", "x(14,3)", "x(14,4)", "x(14,5)", "x(14,6)", "x(14,7)", "x(14,8)", "x(14,9)", "x(14,10)", "x(14,11)", "x(14,12)", "x(14,13)", "x(14,15)", "x(14,16)", "x(14,17)", "x(0,14)", "x(1,14)", "x(2,14)", "x(3,14)", "x(4,14)", "x(5,14)", "x(6,14)", "x(7,14)", "x(8,14)", "x(9,14)", "x(10,14)", "x(11,14)", "x(12,14)", "x(13,14)", "x(15,14)", "x(16,14)", "x(17,14)"]);
alldiff(["x(15,0)", "x(15,1)", "x(15,2)", "x(15,3)", "x(15,4)", "x(15,5)", "x(15,6)", "x(15,7)", "x(15,8)", "x(15,9)", "x(15,10)", "x(15,11)", "x(15,12)", "x(15,13)", "x(15,14)", "x(15,16)", "x(15,17)", "x(0,15)", "x(1,15)", "x(2,15)", "x(3,15)", "x(4,15)", "x(5,15)", "x(6,15)", "x(7,15)", "x(8,15)", "x(9,15)", "x(10,15)", "x(11,15)", "x(12,15)", "x(13,15)", "x(14,15)", "x(16,15)", "x(17,15)"]);
alldiff(["x(16,0)", "x(16,1)", "x(16,2)", "x(16,3)", "x(16,4)", "x(16,5)", "x(16,6)", "x(16,7)", "x(16,8)", "x(16,9)", "x(16,10)", "x(16,11)", "x(16,12)", "x(16,13)", "x(16,14)", "x(16,15)", "x(16,17)", "x(0,16)", "x(1,16)", "x(2,16)", "x(3,16)", "x(4,16)", "x(5,16)", "x(6,16)", "x(7,16)", "x(8,16)", "x(9,16)", "x(10,16)", "x(11,16)", "x(12,16)", "x(13,16)", "x(14,16)", "x(15,16)", "x(17,16)"]);
alldiff(["x(17,0)", "x(17,1)", "x(17,2)", "x(17,3)", "x(17,4)", "x(17,5)", "x(17,6)", "x(17,7)", "x(17,8)", "x(17,9)", "x(17,10)", "x(17,11)", "x(17,12)", "x(17,13)", "x(17,14)", "x(17,15)", "x(17,16)", "x(0,17)", "x(1,17)", "x(2,17)", "x(3,17)", "x(4,17)", "x(5,17)", "x(6,17)", "x(7,17)", "x(8,17)", "x(9,17)", "x(10,17)", "x(11,17)", "x(12,17)", "x(13,17)", "x(14,17)", "x(15,17)", "x(16,17)"]);
#line 31
("x(0,1)" < 17) => ("x(1,0)" >= 17);
("x(0,2)" < 17) => ("x(2,0)" >= 17);
("x(0,3)" < 17) => ("x(3,0)" >= 17);
("x(0,4)" < 17) => ("x(4,0)" >= 17);
("x(0,5)" < 17) => ("x(5,0)" >= 17);
("x(0,6)" < 17) => ("x(6,0)" >= 17);
("x(0,7)" < 17) => ("x(7,0)" >= 17);
("x(0,8)" < 17) => ("x(8,0)" >= 17);
("x(0,9)" < 17) => ("x(9,0)" >= 17);
("x(0,10)" < 17) => ("x(10,0)" >= 17);
("x(0,11)" < 17) => ("x(11,0)" >= 17);
("x(0,12)" < 17) => ("x(12,0)" >= 17);
("x(0,13)" < 17) => ("x(13,0)" >= 17);
("x(0,14)" < 17) => ("x(14,0)" >= 17);
("x(0,15)" < 17) => ("x(15,0)" >= 17);
("x(0,16)" < 17) => ("x(16,0)" >= 17);
("x(0,17)" < 17) => ("x(17,0)" >= 17);
("x(1,0)" < 17) => ("x(0,1)" >= 17);
("x(1,2)" < 17) => ("x(2,1)" >= 17);
("x(1,3)" < 17) => ("x(3,1)" >= 17);
("x(1,4)" < 17) => ("x(4,1)" >= 17);
("x(1,5)" < 17) => ("x(5,1)" >= 17);
("x(1,6)" < 17) => ("x(6,1)" >= 17);
("x(1,7)" < 17) => ("x(7,1)" >= 17);
("x(1,8)" < 17) => ("x(8,1)" >= 17);
("x(1,9)" < 17) => ("x(9,1)" >= 17);
("x(1,10)" < 17) => ("x(10,1)" >= 17);
("x(1,11)" < 17) => ("x(11,1)" >= 17);
("x(1,12)" < 17) => ("x(12,1)" >= 17);
("x(1,13)" < 17) => ("x(13,1)" >= 17);
("x(1,14)" < 17) => ("x(14,1)" >= 17);
("x(1,15)" < 17) => ("x(15,1)" >= 17);
("x(1,16)" < 17) => ("x(16,1)" >= 17);
("x(1,17)" < 17) => ("x(17,1)" >= 17);
("x(2,0)" < 17) => ("x(0,2)" >= 17);
("x(2,1)" < 17) => ("x(1,2)" >= 17);
("x(2,3)" < 17) => ("x(3,2)" >= 17);
("x(2,4)" < 17) => ("x(4,2)" >= 17);
("x(2,5)" < 17) => ("x(5,2)" >= 17);
("x(2,6)" < 17) => ("x(6,2)" >= 17);
("x(2,7)" < 17) => ("x(7,2)" >= 17);
("x(2,8)" < 17) => ("x(8,2)" >= 17);
("x(2,9)" < 17) => ("x(9,2)" >= 17);
("x(2,10)" < 17) => ("x(10,2)" >= 17);
("x(2,11)" < 17) => ("x(11,2)" >= 17);
("x(2,12)" < 17) => ("x(12,2)" >= 17);
("x(2,13)" < 17) => ("x(13,2)" >= 17);
("x(2,14)" < 17) => ("x(14,2)" >= 17);
("x(2,15)" < 17) => ("x(15,2)" >= 17);
("x(2,16)" < 17) => ("x(16,2)" >= 17);
("x(2,17)" < 17) => ("x(17,2)" >= 17);
("x(3,0)" < 17) => ("x(0,3)" >= 17);
("x(3,1)" < 17) => ("x(1,3)" >= 17);
("x(3,2)" < 17) => ("x(2,3)" >= 17);
("x(3,4)" < 17) => ("x(4,3)" >= 17);
("x(3,5)" < 17) => ("x(5,3)" >= 17);
("x(3,6)" < 17) => ("x(6,3)" >= 17);
("x(3,7)" < 17) => ("x(7,3)" >= 17);
("x(3,8)" < 17) => ("x(8,3)" >= 17);
("x(3,9)" < 17) => ("x(9,3)" >= 17);
("x(3,10)" < 17) => ("x(10,3)" >= 17);
("x(3,11)" < 17) => ("x(11,3)" >= 17);
("x(3,12)" < 17) => ("x(12,3)" >= 17);
("x(3,13)" < 17) => ("x(13,3)" >= 17);
("x(3,14)" < 17) => ("x(14,3)" >= 17);
("x(3,15)" < 17) => ("x(15,3)" >= 17);
("x(3,16)" < 17) => ("x(16,3)" >= 17);
("x(3,17)" < 17) => ("x(17,3)" >= 17);
("x(4,0)" < 17) => ("x(0,4)" >= 17);
("x(4,1)" < 17) => ("x(1,4)" >= 17);
("x(4,2)" < 17) => ("x(2,4)" >= 17);
("x(4,3)" < 17) => ("x(3,4)" >= 17);
("x(4,5)" < 17) => ("x(5,4)" >= 17);
("x(4,6)" < 17) => ("x(6,4)" >= 17);
("x(4,7)" < 17) => ("x(7,4)" >= 17);
("x(4,8)" < 17) => ("x(8,4)" >= 17);
("x(4,9)" < 17) => ("x(9,4)" >= 17);
("x(4,10)" < 17) => ("x(10,4)" >= 17);
("x(4,11)" < 17) => ("x(11,4)" >= 17);
("x(4,12)" < 17) => ("x(12,4)" >= 17);
("x(4,13)" < 17) => ("x(13,4)" >= 17);
("x(4,14)" < 17) => ("x(14,4)" >= 17);
("x(4,15)" < 17) => ("x(15,4)" >= 17);
("x(4,16)" < 17) => ("x(16,4)" >= 17);
("x(4,17)" < 17) => ("x(17,4)" >= 17);
("x(5,0)" < 17) => ("x(0,5)" >= 17);
("x(5,1)" < 17) => ("x(1,5)" >= 17);
("x(5,2)" < 17) => ("x(2,5)" >= 17);
("x(5,3)" < 17) => ("x(3,5)" >= 17);
("x(5,4)" < 17) => ("x(4,5)" >= 17);
("x(5,6)" < 17) => ("x(6,5)" >= 17);
("x(5,7)" < 17) => ("x(7,5)" >= 17);
("x(5,8)" < 17) => ("x(8,5)" >= 17);
("x(5,9)" < 17) => ("x(9,5)" >= 17);
("x(5,10)" < 17) => ("x(10,5)" >= 17);
("x(5,11)" < 17) => ("x(11,5)" >= 17);
("x(5,12)" < 17) => ("x(12,5)" >= 17);
("x(5,13)" < 17) => ("x(13,5)" >= 17);
("x(5,14)" < 17) => ("x(14,5)" >= 17);
("x(5,15)" < 17) => ("x(15,5)" >= 17);
("x(5,16)" < 17) => ("x(16,5)" >= 17);
("x(5,17)" < 17) => ("x(17,5)" >= 17);
("x(6,0)" < 17) => ("x(0,6)" >= 17);
("x(6,1)" < 17) => ("x(1,6)" >= 17);
("x(6,2)" < 17) => ("x(2,6)" >= 17);
("x(6,3)" < 17) => ("x(3,6)" >= 17);
("x(6,4)" < 17) => ("x(4,6)" >= 17);
("x(6,5)" < 17) => ("x(5,6)" >= 17);
("x(6,7)" < 17) => ("x(7,6)" >= 17);
("x(6,8)" < 17) => ("x(8,6)" >= 17);
("x(6,9)" < 17) => ("x(9,6)" >= 17);
("x(6,10)" < 17) => ("x(10,6)" >= 17);
("x(6,11)" < 17) => ("x(11,6)" >= 17);
("x(6,12)" < 17) => ("x(12,6)" >= 17);
("x(6,13)" < 17) => ("x(13,6)" >= 17);
("x(6,14)" < 17) => ("x(14,6)" >= 17);
("x(6,15)" < 17) => ("x(15,6)" >= 17);
("x(6,16)" < 17) => ("x(16,6)" >= 17);
("x(6,17)" < 17) => ("x(17,6)" >= 17);
("x(7,0)" < 17) => ("x(0,7)" >= 17);
("x(7,1)" < 17) => ("x(1,7)" >= 17);
("x(7,2)" < 17) => ("x(2,7)" >= 17);
("x(7,3)" < 17) => ("x(3,7)" >= 17);
("x(7,4)" < 17) => ("x(4,7)" >= 17);
("x(7,5)" < 17) => ("x(5,7)" >= 17);
("x(7,6)" < 17) => ("x(6,7)" >= 17);
("x(7,8)" < 17) => ("x(8,7)" >= 17);
("x(7,9)" < 17) => ("x(9,7)" >= 17);
("x(7,10)" < 17) => ("x(10,7)" >= 17);
("x(7,11)" < 17) => ("x(11,7)" >= 17);
("x(7,12)" < 17) => ("x(12,7)" >= 17);
("x(7,13)" < 17) => ("x(13,7)" >= 17);
("x(7,14)" < 17) => ("x(14,7)" >= 17);
("x(7,15)" < 17) => ("x(15,7)" >= 17);
("x(7,16)" < 17) => ("x(16,7)" >= 17);
("x(7,17)" < 17) => ("x(17,7)" >= 17);
("x(8,0)" < 17) => ("x(0,8)" >= 17);
("x(8,1)" < 17) => ("x(1,8)" >= 17);
("x(8,2)" < 17) => ("x(2,8)" >= 17);
("x(8,3)" < 17) => ("x(3,8)" >= 17);
("x(8,4)" < 17) => ("x(4,8)" >= 17);
("x(8,5)" < 17) => ("x(5,8)" >= 17);
("x(8,6)" < 17) => ("x(6,8)" >= 17);
("x(8,7)" < 17) => ("x(7,8)" >= 17);
("x(8,9)" < 17) => ("x(9,8)" >= 17);
("x(8,10)" < 17) => ("x(10,8)" >= 17);
("x(8,11)" < 17) => ("x(11,8)" >= 17);
("x(8,12)" < 17) => ("x(12,8)" >= 17);
("x(8,13)" < 17) => ("x(13,8)" >= 17);
("x(8,14)" < 17) => ("x(14,8)" >= 17);
("x(8,15)" < 17) => ("x(15,8)" >= 17);
("x(8,16)" < 17) => ("x(16,8)" >= 17);
("x(8,17)" < 17) => ("x(17,8)" >= 17);
("x(9,0)" < 17) => ("x(0,9)" >= 17);
("x(9,1)" < 17) => ("x(1,9)" >= 17);
("x(9,2)" < 17) => ("x(2,9)" >= 17);
("x(9,3)" < 17) => ("x(3,9)" >= 17);
("x(9,4)" < 17) => ("x(4,9)" >= 17);
("x(9,5)" < 17) => ("x(5,9)" >= 17);
("x(9,6)" < 17) => ("x(6,9)" >= 17);
("x(9,7)" < 17) => ("x(7,9)" >= 17);
("x(9,8)" < 17) => ("x(8,9)" >= 17);
("x(9,10)" < 17) => ("x(10,9)" >= 17);
("x(9,11)" < 17) => ("x(11,9)" >= 17);
("x(9,12)" < 17) => ("x(12,9)" >= 17);
("x(9,13)" < 17) => ("x(13,9)" >= 17);
("x(9,14)" < 17) => ("x(14,9)" >= 17);
("x(9,15)" < 17) => ("x(15,9)" >= 17);
("x(9,16)" < 17) => ("x(16,9)" >= 17);
("x(9,17)" < 17) => ("x(17,9)" >= 17);
("x(10,0)" < 17) => ("x(0,10)" >= 17);
("x(10,1)" < 17) => ("x(1,10)" >= 17);
("x(10,2)" < 17) => ("x(2,10)" >= 17);
("x(10,3)" < 17) => ("x(3,10)" >= 17);
("x(10,4)" < 17) => ("x(4,10)" >= 17);
("x(10,5)" < 17) => ("x(5,10)" >= 17);
("x(10,6)" < 17) => ("x(6,10)" >= 17);
("x(10,7)" < 17) => ("x(7,10)" >= 17);
("x(10,8)" < 17) => ("x(8,10)" >= 17);
("x(10,9)" < 17) => ("x(9,10)" >= 17);
("x(10,11)" < 17) => ("x(11,10)" >= 17);
("x(10,12)" < 17) => ("x(12,10)" >= 17);
("x(10,13)" < 17) => ("x(13,10)" >= 17);
("x(10,14)" < 17) => ("x(14,10)" >= 17);
("x(10,15)" < 17) => ("x(15,10)" >= 17);
("x(10,16)" < 17) => ("x(16,10)" >= 17);
("x(10,17)" < 17) => ("x(17,10)" >= 17);
("x(11,0)" < 17) => ("x(0,11)" >= 17);
("x(11,1)" < 17) => ("x(1,11)" >= 17);
("x(11,2)" < 17) => ("x(2,11)" >= 17);
("x(11,3)" < 17) => ("x(3,11)" >= 17);
("x(11,4)" < 17) => ("x(4,11)" >= 17);
("x(11,5)" < 17) => ("x(5,11)" >= 17);
("x(11,6)" < 17) => ("x(6,11)" >= 17);
("x(11,7)" < 17) => ("x(7,11)" >= 17);
("x(11,8)" < 17) => ("x(8,11)" >= 17);
("x(11,9)" < 17) => ("x(9,11)" >= 17);
("x(11,10)" < 17) => ("x(10,11)" >= 17);
("x(11,12)" < 17) => ("x(12,11)" >= 17);
("x(11,13)" < 17) => ("x(13,11)" >= 17);
("x(11,14)" < 17) => ("x(14,11)" >= 17);
("x(11,15)" < 17) => ("x(15,11)" >= 17);
("x(11,16)" < 17) => ("x(16,11)" >= 17);
("x(11,17)" < 17) => ("x(17,11)" >= 17);
("x(12,0)" < 17) => ("x(0,12)" >= 17);
("x(12,1)" < 17) => ("x(1,12)" >= 17);
("x(12,2)" < 17) => ("x(2,12)" >= 17);
("x(12,3)" < 17) => ("x(3,12)" >= 17);
("x(12,4)" < 17) => ("x(4,12)" >= 17);
("x(12,5)" < 17) => ("x(5,12)" >= 17);
("x(12,6)" < 17) => ("x(6,12)" >= 17);
("x(12,7)" < 17) => ("x(7,12)" >= 17);
("x(12,8)" < 17) => ("x(8,12)" >= 17);
("x(12,9)" < 17) => ("x(9,12)" >= 17);
("x(12,10)" < 17) => ("x(10,12)" >= 17);
("x(12,11)" < 17) => ("x(11,12)" >= 17);
("x(12,13)" < 17) => ("x(13,12)" >= 17);
("x(12,14)" < 17) => ("x(14,12)" >= 17);
("x(12,15)" < 17) => ("x(15,12)" >= 17);
("x(12,16)" < 17) => ("x(16,12)" >= 17);
("x(12,17)" < 17) => ("x(17,12)" >= 17);
("x(13,0)" < 17) => ("x(0,13)" >= 17);
("x(13,1)" < 17) => ("x(1,13)" >= 17);
("x(13,2)" < 17) => ("x(2,13)" >= 17);
("x(13,3)" < 17) => ("x(3,13)" >= 17);
("x(13,4)" < 17) => ("x(4,13)" >= 17);
("x(13,5)" < 17) => ("x(5,13)" >= 17);
("x(13,6)" < 17) => ("x(6,13)" >= 17);
("x(13,7)" < 17) => ("x(7,13)" >= 17);
("x(13,8)" < 17) => ("x(8,13)" >= 17);
("x(13,9)" < 17) => ("x(9,13)" >= 17);
("x(13,10)" < 17) => ("x(10,13)" >= 17);
("x(13,11)" < 17) => ("x(11,13)" >= 17);
("x(13,12)" < 17) => ("x(12,13)" >= 17);
("x(13,14)" < 17) => ("x(14,13)" >= 17);
("x(13,15)" < 17) => ("x(15,13)" >= 17);
("x(13,16)" < 17) => ("x(16,13)" >= 17);
("x(13,17)" < 17) => ("x(17,13)" >= 17);
("x(14,0)" < 17) => ("x(0,14)" >= 17);
("x(14,1)" < 17) => ("x(1,14)" >= 17);
("x(14,2)" < 17) => ("x(2,14)" >= 17);
("x(14,3)" < 17) => ("x(3,14)" >= 17);
("x(14,4)" < 17) => ("x(4,14)" >= 17);
("x(14,5)" < 17) => ("x(5,14)" >= 17);
("x(14,6)" < 17) => ("x(6,14)" >= 17);
("x(14,7)" < 17) => ("x(7,14)" >= 17);
("x(14,8)" < 17) => ("x(8,14)" >= 17);
("x(14,9)" < 17) => ("x(9,14)" >= 17);
("x(14,10)" < 17) => ("x(10,14)" >= 17);
("x(14,11)" < 17) => ("x(11,14)" >= 17);
("x(14,12)" < 17) => ("x(12,14)" >= 17);
("x(14,13)" < 17) => ("x(13,14)" >= 17);
("x(14,15)" < 17) => ("x(15,14)" >= 17);
("x(14,16)" < 17) => ("x(16,14)" >= 17);
("x(14,17)" < 17) => ("x(17,14)" >= 17);
("x(15,0)" < 17) => ("x(0,15)" >= 17);
("x(15,1)" < 17) => ("x(1,15)" >= 17);
("x(15,2)" < 17) => ("x(2,15)" >= 17);
("x(15,3)" < 17) => ("x(3,15)" >= 17);
("x(15,4)" < 17) => ("x(4,15)" >= 17);
("x(15,5)" < 17) => ("x(5,15)" >= 17);
("x(15,6)" < 17) => ("x(6,15)" >= 17);
("x(15,7)" < 17) => ("x(7,15)" >= 17);
("x(15,8)" < 17) => ("x(8,15)" >= 17);
("x(15,9)" < 17) => ("x(9,15)" >= 17);
("x(15,10)" < 17) => ("x(10,15)" >= 17);
("x(15,11)" < 17) => ("x(11,15)" >= 17);
("x(15,12)" < 17) => ("x(12,15)" >= 17);
("x(15,13)" < 17) => ("x(13,15)" >= 17);
("x(15,14)" < 17) => ("x(14,15)" >= 17);
("x(15,16)" < 17) => ("x(16,15)" >= 17);
("x(15,17)" < 17) => ("x(17,15)" >= 17);
("x(16,0)" < 17) => ("x(0,16)" >= 17);
("x(16,1)" < 17) => ("x(1,16)" >= 17);
("x(16,2)" < 17) => ("x(2,16)" >= 17);
("x(16,3)" < 17) => ("x(3,16)" >= 17);
("x(16,4)" < 17) => ("x(4,16)" >= 17);
("x(16,5)" < 17) => ("x(5,16)" >= 17);
("x(16,6)" < 17) => ("x(6,16)" >= 17);
("x(16,7)" < 17) => ("x(7,16)" >= 17);
("x(16,8)" < 17) => ("x(8,16)" >= 17);
("x(16,9)" < 17) => ("x(9,16)" >= 17);
("x(16,10)" < 17) => ("x(10,16)" >= 17);
("x(16,11)" < 17) => ("x(11,16)" >= 17);
("x(16,12)" < 17) => ("x(12,16)" >= 17);
("x(16,13)" < 17) => ("x(13,16)" >= 17);
("x(16,14)" < 17) => ("x(14,16)" >= 17);
("x(16,15)" < 17) => ("x(15,16)" >= 17);
("x(16,17)" < 17) => ("x(17,16)" >= 17);
("x(17,0)" < 17) => ("x(0,17)" >= 17);
("x(17,1)" < 17) => ("x(1,17)" >= 17);
("x(17,2)" < 17) => ("x(2,17)" >= 17);
("x(17,3)" < 17) => ("x(3,17)" >= 17);
("x(17,4)" < 17) => ("x(4,17)" >= 17);
("x(17,5)" < 17) => ("x(5,17)" >= 17);
("x(17,6)" < 17) => ("x(6,17)" >= 17);
("x(17,7)" < 17) => ("x(7,17)" >= 17);
("x(17,8)" < 17) => ("x(8,17)" >= 17);
("x(17,9)" < 17) => ("x(9,17)" >= 17);
("x(17,10)" < 17) => ("x(10,17)" >= 17);
("x(17,11)" < 17) => ("x(11,17)" >= 17);
("x(17,12)" < 17) => ("x(12,17)" >= 17);
("x(17,13)" < 17) => ("x(13,17)" >= 17);
("x(17,14)" < 17) => ("x(14,17)" >= 17);
("x(17,15)" < 17) => ("x(15,17)" >= 17);
("x(17,16)" < 17) => ("x(16,17)" >= 17);
